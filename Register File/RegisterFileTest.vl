module RegisterFileTester();
    reg[31:0] Input_C;
    wire[31:0] Output_A, Output_B;
    reg[3:0] C_Address, A_Address, B_Address;
    reg E;
    reg clk;

    RegisterFile #() DUT (.A_Address(A_Address),
                            .B_Address(B_Address),
                            .C_Address(C_Address),
                            .C_Data(Input_C),
                            .Write(E),
                            .Clk(clk),
                            .A_Data(Output_A),
                            .B_Data(Output_B));




    initial begin
        // To record the workbench we create a file to be read by GTKWave demostrating all inputs and outputs at any given time.
        $dumpfile("RegisterFileTest.vcd");
        $dumpvars(0,A_Address, B_Address, C_Address,Input_C, E, clk ,Output_A,Output_B);
        $monitor("| A_Adrs [B]%b [D]%1d | B_Adrs [B]%b [D]%1d | C_Adrs [B]%b [D]%1d | C Data [H]%h [D]%1d | Write %b | Clock %b | A_Out [H]%h [D]%1d | B_Out [H]%h [D]%1d |", A_Address, A_Address, B_Address, B_Address, C_Address, C_Address, Input_C, Input_C, E, clk ,Output_A,Output_A,Output_B,Output_B );
        
        $display("\n-----------First Part Of Benchmark - Chaging the values of all registers except r0-----------\n");

        $display("\nInitialize values set Input C equal to 5\n");
        A_Address = 4'd0; B_Address = 4'd0; C_Address = 4'd0; Input_C = 32'd5; E = 0;
        clk =0;#5 clk = 1;#5

        $display("\nEnable Writing and Write to  r1 value= 5\n");
        C_Address = 4'd1; Input_C = 32'd5; E = 1;
        clk =0;#5 clk = 1;#5
        
        $display("\nWrite to  r2 value= 22\n");
        C_Address = 4'd2; Input_C = 32'd22; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r3 value= 33\n");
        C_Address = 4'd3; Input_C = 32'd33; E = 1;
        clk =0;#5 clk = 1;#5
        
        $display("\nWrite to  r4 value= 44\n");
        C_Address = 4'd4; Input_C = 32'd44; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r5 value= 55\n");
        C_Address = 4'd5; Input_C = 32'd55; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r6 value= 66\n");
        C_Address = 4'd6; Input_C = 32'd66; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r7 value= 77\n");
        C_Address = 4'd7; Input_C = 32'd77; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r8 value= 88\n");
        C_Address = 4'd8; Input_C = 32'd88; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r9 value= 99\n");
        C_Address = 4'd9; Input_C = 32'd99; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r10 value= 101\n");
        C_Address = 4'd10; Input_C = 32'd101; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r11 value= 111\n");
        C_Address = 4'd11; Input_C = 32'd111; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r12 value= 121\n");
        C_Address = 4'd12; Input_C = 32'd121; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r13 value= 131\n");
        C_Address = 4'd13; Input_C = 32'd131; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r14 value= 141\n");
        C_Address = 4'd14; Input_C = 32'd141; E = 1;
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r15 value= 151\n");
        C_Address = 4'd15; Input_C = 32'd151; E = 1;
        clk =0;#5 clk = 1;#5
       
        $display("\n-----------Second Part of Benchmark - Reading the values of all registers with output A and B-----------\n");

        $display("\nWe begin reading the repositories reset the input values to 0 and go through each register\n");
        A_Address = 4'd0; B_Address = 4'd0; C_Address = 4'd0; Input_C = 32'd0; E = 0;
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 1 and 2\n");
        A_Address = 4'd1; B_Address = 4'd2; 
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 3 and 4\n");
        A_Address = 4'd3; B_Address = 4'd4; 
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 5 and 6\n");
        A_Address = 4'd5; B_Address = 4'd6; 
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 7 and 8\n");
        A_Address = 4'd7; B_Address = 4'd8; 
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 9 and 10\n");
        A_Address = 4'd9; B_Address = 4'd10; 
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 11 and 12\n");
        A_Address = 4'd11; B_Address = 4'd12; 
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 13 and 14\n");
        A_Address = 4'd13; B_Address = 4'd14; 
        clk =0;#5 clk = 1;#5

        $display("\nLets Read Register 15 and 0\n");
        A_Address = 4'd15; B_Address = 4'd0; 
        clk =0;#5 clk = 1;#5

        $display("\n-----------Last Part of the Benchmark - Adding a specific value to the tenth register and read it through the A output-----------\n");
        
        $display("\nRead Data on r10 Before the Write\n");
        A_Address = 4'd10; 
        clk=0;#5
        $display("\nCurrent value of A Out is equals to 101");

        $display("\nSet address for regiter 10 in Address C, and set C Data to 500\n");
        C_Address = 4'd10; Input_C=32'd500; E=1;
        clk =1;#5 clk =0;
        $display("\nNegative edge check difference in A Out is 500\n");
        #20;
        

        
        
    end

endmodule

   