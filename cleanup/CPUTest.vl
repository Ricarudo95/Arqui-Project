module CPUTester();
    
    reg reset, clk;


    // CPU #() DUT (.A_Address(A_Address),
    //                         .B_Address(B_Address),
    //                         .C_Address(C_Address),
    //                         .C_Data(Input_C),
    //                         .Write(E),
    //                         .Clk(clk),
    //                         .A_Data(Output_A),
    //                         .B_Data(Output_B));

    mipsCPU dut(clk, reset);



    initial begin
        // To record the workbench we create a file to be read by GTKWave demostrating all inputs and outputs at any given time.
        $dumpfile("CPUFileTest.vcd");
        $dumpvars(0,clk, reset, dut.instruction, dut.pcOut, dut.regOutA, dut.regOutB, dut.aluOut);
        $monitor("Clock: %b Reset: %b instruction: %b ", clk, reset, dut.instruction);
        
        $display("\n-----------First Part Of Benchmark - Chaging the values of all registers except r0-----------\n");

        $display("\nInitialize values set Input C equal to 5\n");
        clk =0;#5 clk = 1;#5

        $display("\nEnable Writing and Write to  r1 value= 5\n");
        clk =0;#5 clk = 1;#5
        
        $display("\nWrite to  r2 value= 22\n");
        clk =0;#5 clk = 1;#5

        $display("\nWrite to  r3 value= 33\n");
        clk =0;#5 clk = 1;#5;
        
    
       
        
        
    end

endmodule

   