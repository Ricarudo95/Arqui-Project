module CPUTester();
    
        // To Compile: iverilog -o results/CPUTestbench.vvp CPUTest.vl CPU.v ALUModule.v ControlModules.v MuxModules.v RamModules.v RegisterFile.v UtilModules.v
        // To Build: vvp results/CPUTestbench.vvp

    reg reset = 1'b0, clk;



    mipsCPUData1 CPU_Test1(clk, reset);
    mipsCPUData2 CPU_Test2(clk, reset);



    initial begin
        // To record the workbench we create a file to be read by GTKWave demostrating all inputs and outputs at any given time.
        $dumpfile("results/CPUFileTest.vcd");
        $dumpvars(0,clk, reset,
            //Prohram Counter Variables 
            CPU_Test1.Program_Counter,
            CPU_Test2.Program_Counter,
            
            //Instruction Memory Variables
            CPU_Test1.Instruction_Memory, 

            //Control Unit Variables
            CPU_Test1.Control_Unit, 

            // ALU MOdule Variables
            CPU_Test1.alu,

            //Register File Variables
            CPU_Test1.Register_File,

            //RAM Variables
            CPU_Test1.ram,

            //Adder Variables
            CPU_Test1.addFour,
            CPU_Test1.adder,

            //Shift 2 and Sign Sxtend Variables
            CPU_Test1.signExt,
            CPU_Test1.shftJump,
            CPU_Test1.shftLeft,
            CPU_Test1.simpleAND,

            //Mux Variables
            CPU_Test1.Jump_Mux,
            CPU_Test1.ALU_Mux,
            CPU_Test1.Register_Mux,
            CPU_Test1.RAM_Mux,
            CPU_Test1.Branch_Mux
            );
        
      


clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5       
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5
clk =0;#5 clk = 1;#5 
clk =0;#5 clk = 1;#5

      
clk =0;#5 clk = 1;#5;
        
    
       
        
        
    end

endmodule

   